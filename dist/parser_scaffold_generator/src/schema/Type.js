"use strict";
// This file is part of cxsd, copyright (c) 2016 BusFaster Ltd.
// Released under the MIT license, see LICENSE.
Object.defineProperty(exports, "__esModule", { value: true });
exports.Type = void 0;
var Type = /** @class */ (function () {
    function Type(name) {
        this.attributeTbl = {};
        this.childTbl = {};
        /** XML attributes in an element of this type. */
        this.attributeList = [];
        /** Allowed child elements for an element of this type. */
        this.childList = [];
        /** Other types added as mixins. */
        this.mixinList = [];
        this.surrogateKey = Type.nextKey++;
        this.name = name;
    }
    Type.prototype.addAttribute = function (ref) {
        this.attributeList.push(ref);
        this.attributeTbl[ref.member.name] = ref;
    };
    Type.prototype.addChild = function (ref) {
        this.childList.push(ref);
        this.childTbl[ref.member.name] = ref;
    };
    Type.prototype.addChildSpec = function (spec) {
        var ref = spec.getRef();
        this.childList.push(ref);
        this.childTbl[spec.name] = ref;
    };
    Type.prototype.addMixin = function (type) {
        this.mixinList.push(type);
    };
    Type.nextKey = 0;
    Type.primitiveFlag = 1;
    Type.plainPrimitiveFlag = 2;
    Type.listFlag = 4;
    return Type;
}());
exports.Type = Type;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVHlwZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3BhcnNlcl9zY2FmZm9sZF9nZW5lcmF0b3Ivc3JjL3NjaGVtYS9UeXBlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSwrREFBK0Q7QUFDL0QsK0NBQStDOzs7QUFNL0M7SUFDQyxjQUFZLElBQVk7UUE4Q3hCLGlCQUFZLEdBQWtDLEVBQUUsQ0FBQztRQUNqRCxhQUFRLEdBQWtDLEVBQUUsQ0FBQztRQUM3QyxpREFBaUQ7UUFDakQsa0JBQWEsR0FBZ0IsRUFBRSxDQUFDO1FBQ2hDLDBEQUEwRDtRQUMxRCxjQUFTLEdBQWdCLEVBQUUsQ0FBQztRQUM1QixtQ0FBbUM7UUFDbkMsY0FBUyxHQUFXLEVBQUUsQ0FBQztRQXBEdEIsSUFBSSxDQUFDLFlBQVksR0FBRyxJQUFJLENBQUMsT0FBTyxFQUFFLENBQUM7UUFDbkMsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUM7SUFDbEIsQ0FBQztJQUVELDJCQUFZLEdBQVosVUFBYSxHQUFjO1FBQzFCLElBQUksQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQzdCLElBQUksQ0FBQyxZQUFZLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsR0FBRyxHQUFHLENBQUM7SUFDMUMsQ0FBQztJQUVELHVCQUFRLEdBQVIsVUFBUyxHQUFjO1FBQ3RCLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ3pCLElBQUksQ0FBQyxRQUFRLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsR0FBRyxHQUFHLENBQUM7SUFDdEMsQ0FBQztJQUVELDJCQUFZLEdBQVosVUFBYSxJQUFZO1FBQ3hCLElBQUksR0FBRyxHQUFHLElBQUksQ0FBQyxNQUFNLEVBQUUsQ0FBQztRQUV4QixJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUN6QixJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxHQUFHLENBQUM7SUFDaEMsQ0FBQztJQUVELHVCQUFRLEdBQVIsVUFBUyxJQUFVO1FBQ2xCLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQzNCLENBQUM7SUEwQ2MsWUFBTyxHQUFHLENBQUMsQ0FBQztJQUVwQixrQkFBYSxHQUFHLENBQUMsQ0FBQztJQUNsQix1QkFBa0IsR0FBRyxDQUFDLENBQUM7SUFDdkIsYUFBUSxHQUFHLENBQUMsQ0FBQztJQUNyQixXQUFDO0NBQUEsQUF4RUQsSUF3RUM7QUF4RVksb0JBQUkiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBUaGlzIGZpbGUgaXMgcGFydCBvZiBjeHNkLCBjb3B5cmlnaHQgKGMpIDIwMTYgQnVzRmFzdGVyIEx0ZC5cbi8vIFJlbGVhc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSwgc2VlIExJQ0VOU0UuXG5cbmltcG9ydCB7TmFtZXNwYWNlfSBmcm9tICcuL05hbWVzcGFjZSc7XG5pbXBvcnQge01lbWJlcn0gZnJvbSAnLi9NZW1iZXInO1xuaW1wb3J0IHtNZW1iZXJSZWZ9IGZyb20gJy4vTWVtYmVyUmVmJztcblxuZXhwb3J0IGNsYXNzIFR5cGUge1xuXHRjb25zdHJ1Y3RvcihuYW1lOiBzdHJpbmcpIHtcblx0XHR0aGlzLnN1cnJvZ2F0ZUtleSA9IFR5cGUubmV4dEtleSsrO1xuXHRcdHRoaXMubmFtZSA9IG5hbWU7XG5cdH1cblxuXHRhZGRBdHRyaWJ1dGUocmVmOiBNZW1iZXJSZWYpIHtcblx0XHR0aGlzLmF0dHJpYnV0ZUxpc3QucHVzaChyZWYpO1xuXHRcdHRoaXMuYXR0cmlidXRlVGJsW3JlZi5tZW1iZXIubmFtZV0gPSByZWY7XG5cdH1cblxuXHRhZGRDaGlsZChyZWY6IE1lbWJlclJlZikge1xuXHRcdHRoaXMuY2hpbGRMaXN0LnB1c2gocmVmKTtcblx0XHR0aGlzLmNoaWxkVGJsW3JlZi5tZW1iZXIubmFtZV0gPSByZWY7XG5cdH1cblxuXHRhZGRDaGlsZFNwZWMoc3BlYzogTWVtYmVyKSB7XG5cdFx0dmFyIHJlZiA9IHNwZWMuZ2V0UmVmKCk7XG5cblx0XHR0aGlzLmNoaWxkTGlzdC5wdXNoKHJlZik7XG5cdFx0dGhpcy5jaGlsZFRibFtzcGVjLm5hbWVdID0gcmVmO1xuXHR9XG5cblx0YWRkTWl4aW4odHlwZTogVHlwZSkge1xuXHRcdHRoaXMubWl4aW5MaXN0LnB1c2godHlwZSk7XG5cdH1cblxuXHRuYW1lOiBzdHJpbmc7XG5cdG5hbWVzcGFjZTogTmFtZXNwYWNlO1xuXHRzYWZlTmFtZTogc3RyaW5nO1xuXHRieXRlUG9zOiBudW1iZXI7XG5cblx0LyoqIFByaW1pdGl2ZSB0eXBlIG9mIGNoaWxkIHRleHQgbm9kZSBpZiBkZWZpbmVkXG5cdCAgKiAocmVwcmVzZW50YWJsZSBhcyBhIEphdmFTY3JpcHQgdmFsdWUpLiAqL1xuXHRwcmltaXRpdmVUeXBlOiBUeXBlO1xuXHQvKiogTGlzdCBvZiBhbGxvd2VkIGxpdGVyYWwgdmFsdWVzLCBpZiBzdWNoIGEgcmVzdHJpY3Rpb24gaXMgZGVmaW5lZC4gKi9cblx0bGl0ZXJhbExpc3Q6IHN0cmluZ1tdO1xuXG5cdC8qKiBUeXBlIG9ubHkgY29udGFpbnMgYSBjaGlsZCB0ZXh0IG5vZGUgYW5kIG5vIG90aGVyIGRhdGEuICovXG5cdGlzUGxhaW5QcmltaXRpdmU6IGJvb2xlYW47XG5cblx0aXNMaXN0OiBib29sZWFuO1xuXG5cdGlzUHJveHk6IGJvb2xlYW47XG5cblx0aXNFeHBvcnRlZDogYm9vbGVhbjtcblxuXHRhdHRyaWJ1dGVUYmw6IHsgW25hbWU6IHN0cmluZ106IE1lbWJlclJlZiB9ID0ge307XG5cdGNoaWxkVGJsOiB7IFtuYW1lOiBzdHJpbmddOiBNZW1iZXJSZWYgfSA9IHt9O1xuXHQvKiogWE1MIGF0dHJpYnV0ZXMgaW4gYW4gZWxlbWVudCBvZiB0aGlzIHR5cGUuICovXG5cdGF0dHJpYnV0ZUxpc3Q6IE1lbWJlclJlZltdID0gW107XG5cdC8qKiBBbGxvd2VkIGNoaWxkIGVsZW1lbnRzIGZvciBhbiBlbGVtZW50IG9mIHRoaXMgdHlwZS4gKi9cblx0Y2hpbGRMaXN0OiBNZW1iZXJSZWZbXSA9IFtdO1xuXHQvKiogT3RoZXIgdHlwZXMgYWRkZWQgYXMgbWl4aW5zLiAqL1xuXHRtaXhpbkxpc3Q6IFR5cGVbXSA9IFtdO1xuXG5cdC8qKiBQYXJlbnQgdHlwZSB0aGlzIGlzIGRlcml2ZWQgZnJvbS4gKi9cblx0cGFyZW50OiBUeXBlO1xuXG5cdC8qKiBGb3IgYW4gYW5vbnltb3VzIHR5cGUsIHRoZSBtZW1iZXIgKG9mIGFub3RoZXIgdHlwZSkgdGhhdCBpdCBkZWZpbmVzLlxuXHQgICogVXNlZCBmb3IgZ2l2aW5nIHRoZSB0eXBlIGEgZGVzY3JpcHRpdmUgbmFtZS4gKi9cblx0Y29udGFpbmluZ1R5cGU6IFR5cGU7XG5cdGNvbnRhaW5pbmdSZWY6IE1lbWJlclJlZjtcblxuXHRjb21tZW50OiBzdHJpbmc7XG5cblx0c3Vycm9nYXRlS2V5OiBudW1iZXI7XG5cdHByaXZhdGUgc3RhdGljIG5leHRLZXkgPSAwO1xuXG5cdHN0YXRpYyBwcmltaXRpdmVGbGFnID0gMTtcblx0c3RhdGljIHBsYWluUHJpbWl0aXZlRmxhZyA9IDI7XG5cdHN0YXRpYyBsaXN0RmxhZyA9IDQ7XG59XG4iXX0=