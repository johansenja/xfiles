// This file is part of cxml, copyright (c) 2016 BusFaster Ltd.
// Released under the MIT license, see LICENSE.

import {Namespace, ModuleExports, ImportSpec} from '../xml/Namespace';
import {RawMemberSpec} from '../xml/Member';
import {RawTypeSpec} from '../xml/TypeSpec';
import {Context} from '../xml/Context';

/** Context for namespaces defined by calling register(). */
export var defaultContext = new Context();

/** Mark a namespace as seen. */

function mark(exportObj: ModuleExports, namespace?: Namespace) {
	if(!exportObj._cxml) {
		exportObj._cxml = [null];
		defaultContext.markNamespace(exportObj);
	}

	if(namespace) exportObj._cxml[0] = namespace;
}

/** Register a namespace.
  * This is called from JavaScript autogenerated by the cxsd compiler. */

export function register(
	name: string,
	exportObject: ModuleExports,
	importSpecList: ImportSpec[],
	exportTypeNameList: string[],
	rawTypeSpecList: RawTypeSpec[],
	rawMemberSpecList: RawMemberSpec[]
) {
	var namespace = defaultContext.registerNamespace(name).init(importSpecList);

	defaultContext.registerTypes(namespace, exportTypeNameList, rawTypeSpecList);
	defaultContext.registerMembers(namespace, rawMemberSpecList);

	mark(exportObject, namespace);

	for(var spec of importSpecList) mark(spec[0]);

	defaultContext.process();
}

/** Remove temporary structures needed to define new handlers and initialize the parser. */

export function init(strict?: boolean) {
	defaultContext.cleanPlaceholders(strict);
}
